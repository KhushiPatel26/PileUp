import 'dart:typed_data';

import 'ApiService2.dart';

class Userstb {
  int? userId; // Nullable as it's generated by the database
  final String name;
  final String email;
  final String phoneNumber;
  final String password;
  final String userType;
  Uint8List? profilePicture;
  final String? uid;

  Userstb(
      {this.userId,
        required this.name,
        required this.email,
        required this.phoneNumber,
        required this.password,
        required this.userType,
        this.profilePicture,
        required this.uid});

  factory Userstb.fromJson(Map<String, dynamic> json) {
    return Userstb(
      userId: json['userId'],
      name: json['name'],
      email: json['email'],
      phoneNumber: json['phoneNumber'],
      password: json['password'],
      userType: json['userType'],
      profilePicture: json['profilePicture'],
      uid: json['uid'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'userId': userId,
      'name': name,
      'email': email,
      'phoneNumber': phoneNumber,
      'password': password,
      'userType': userType,
      'profilePicture': profilePicture,
      'uid': uid
    };
  }
}

class ApiService_Userstb extends ApiService2<Userstb> {
  @override
  Userstb dataFromJson(Map<String, dynamic> json) {
    return Userstb.fromJson(json);
  }
}

class ToDoTask {
  final String usId;
  final int taskId;
  final String taskName;
  String taskDesc;
  final double precent;
  final String startDate;
  final String dueDate;
  String priority; //high,low,medium
  final String remind;
  final String status; //in progress, completed, on hold
  String category;
  String? labels;
  final int subtask;
  final String createDate;

  ToDoTask({
    required this.usId,
    required this.taskId,
    required this.taskName,
    required this.taskDesc,
    required this.precent,
    required this.startDate,
    required this.dueDate,
    required this.priority,
    required this.remind,
    required this.status,
    required this.category,
    this.labels,
    required this.subtask,
    required this.createDate,
  });

  factory ToDoTask.fromJson(Map<String, dynamic> json) {
    return ToDoTask(
        usId: json['usId'],
        taskId: json['taskId'],
        taskName: json['taskName'],
        taskDesc: json['taskDesc'],
        precent: json['percent'].toDouble(),
        startDate: json['startDate'],
        dueDate: json['dueDate'],
        priority: json['priority'],
        remind: json['remind'],
        status: json['status'],
        category: json['category'],
        labels: json['labels'],
        subtask: json['subtask'],
        createDate: json['createDate']);
  }

  Map<String, dynamic> toJson() {
    return {
      'usId': usId,
      'taskId': taskId,
      'taskName': taskName,
      'taskDesc': taskDesc,
      'percent': precent,
      'startDate': startDate, //.toIso8601String(),
      'dueDate': dueDate, //.toIso8601String(),
      'priority': priority,
      'remind': remind,
      'status': status,
      'category': category,
      'labels': labels,
      'subtask': subtask,
      'createDate': createDate,
    };
  }
}

class ApiService_ToDoTask extends ApiService2<ToDoTask> {
  @override
  ToDoTask dataFromJson(Map<String, dynamic> json) {
    return ToDoTask.fromJson(json);
  }
}

class Comp_Mem {
  String companyCode;
  String uid;
  String isHead;

  Comp_Mem({
    required this.companyCode,
    required this.uid,
    required this.isHead
  });

  factory Comp_Mem.fromJson(Map<String, dynamic> json) {
    return Comp_Mem(
        companyCode: json['companyCode'],
        uid: json['uid'],
        isHead: json['isHead']
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'companyCode': companyCode,
      'uid': uid,
      'isHead': isHead
    };
  }
}

class ApiService_Comp_Mem extends ApiService2<Comp_Mem> {
  @override
  Comp_Mem dataFromJson(Map<String, dynamic> json) {
    return Comp_Mem.fromJson(json);
  }
}

class Company {
  String companyCode;
  String companyName;
  String companyEmail;
  String? companyAddress;
  String companyNumber;
  String? companyWebsite;
  String? companySocialIds;
  String companyDescription;
  Uint8List? logo; // Assuming a List of bytes for the logo

  Company({
    required this.companyCode,
    required this.companyName,
    required this.companyEmail,
    this.companyAddress,
    required this.companyNumber,
    this.companyWebsite,
    this.companySocialIds,
    required this.companyDescription,
    this.logo,
  });

  Map<String, dynamic> toJson() {
    return {
      'companyCode': companyCode,
      'companyName': companyName,
      'companyEmail': companyEmail,
      'companyAddress': companyAddress,
      'companyNumber': companyNumber,
      'companyWebsite': companyWebsite,
      'companySocialIds': companySocialIds,
      'companyDescription': companyDescription,
      'logo': logo?.toList(),
    };
  }

  factory Company.fromJson(Map<String, dynamic> json) {
    return Company(
      companyCode: json['companyCode'],
      companyName: json['companyName'],
      companyEmail: json['companyEmail'],
      companyAddress: json['companyAddress'],
      companyNumber: json['companyNumber'],
      companyWebsite: json['companyWebsite'],
      companySocialIds: json['companySocialIds'],
      companyDescription: json['companyDescription'],
      logo: json['logo'] != null
          ? Uint8List.fromList(json['logo'].cast<int>())
          : null,
    );
  }
}

class ApiService_Company extends ApiService2<Company> {
  @override
  Company dataFromJson(Map<String, dynamic> json) {
    return Company.fromJson(json);
  }
}

class Project {
  String compCode;
  int? projectId;
  String name;
  String description;
  String creationDate;
  String dueDate;
  String priority;
  double progress;
  String tags;

  Project({
    required this.compCode,
    this.projectId,
    required this.name,
    required this.description,
    required this.creationDate,
    required this.dueDate,
    required this.priority,
    required this.progress,
    required this.tags,
  });

  factory Project.fromJson(Map<String, dynamic> json) {
    return Project(
      compCode: json['compCode'],
      projectId: json['projectId'],
      name: json['name'],
      description: json['description'],
      creationDate: json['creationDate'],
      dueDate: json['dueDate'],
      priority: json['priority'],
      progress: json['progress'].toDouble(),
      tags: json['tags'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'compCode': compCode,
      'projectId': projectId,
      'name': name,
      'description': description,
      'creationDate': creationDate,
      'dueDate': dueDate,
      'priority': priority,
      'progress': progress,
      'tags': tags,
    };
  }
}

class ApiService_Project extends ApiService2<Project> {
  @override
  Project dataFromJson(Map<String, dynamic> json) {
    return Project.fromJson(json);
  }
}

class ProjMem {
  int projectId;
  String uid;
  String isHead;

  ProjMem({
    required this.projectId,
    required this.uid,
    required this.isHead
  });

  factory ProjMem.fromJson(Map<String, dynamic> json) {
    return ProjMem(
      projectId: json['projectId'],
      uid: json['uid'],
      isHead: json['isHead'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'projectId': projectId,
      'uid': uid,
      'isHead': isHead
    };
  }
}

class ApiService_ProjMem extends ApiService2<ProjMem> {
  @override
  ProjMem dataFromJson(Map<String, dynamic> json) {
    return ProjMem.fromJson(json);
  }
}

class Reminder {
  int? rid; // Reminder ID
  String uid; // User ID
  String rname; // Reminder Name
  String? rdesc; // Reminder Description
  String isEvent; // Is an Event (yes/no)
  String startDate;
  String? dueDate;
  String doRem; // Do Reminder (yes/no)
  String? remTime; // Reminder Time
  String color; // Color

  Reminder({
    this.rid,
    required this.uid,
    required this.rname,
    this.rdesc,
    required this.isEvent,
    required this.startDate,
    this.dueDate,
    required this.doRem,
    this.remTime,
    required this.color,
  });

  factory Reminder.fromJson(Map<String, dynamic> json) {
    return Reminder(
      rid: json['rid'],
      uid: json['uid'],
      rname: json['rname'],
      rdesc: json['rdesc'],
      isEvent: json['isevent'],
      startDate: json['startdate'],
      dueDate: json['duedate'],
      doRem: json['dorem'],
      remTime: json['remtime'],
      color: json['color'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'rid': rid,
      'uid': uid,
      'rname': rname,
      'rdesc': rdesc,
      'isevent': isEvent,
      'startdate': startDate,
      'duedate': dueDate,
      'dorem': doRem,
      'remtime': remTime,
      'color': color,
    };
  }
}

class ApiService_Reminder extends ApiService2<Reminder> {
  @override
  Reminder dataFromJson(Map<String, dynamic> json) {
    return Reminder.fromJson(json);
  }
}

class Subtask {
  final int stId;
  final int taskId; // Reference to ToDoTasks taskId
  final String subtaskName;
  final String subtaskDescription;
  final String priority;
  final String isCompleted;

  Subtask({
    required this.stId,
    required this.taskId,
    required this.subtaskName,
    required this.subtaskDescription,
    required this.priority,
    required this.isCompleted,
  });

  Map<String, dynamic> toJson() {
    return {
      'stId': stId,
      'taskId': taskId,
      'subtaskName': subtaskName,
      'subtaskDescription': subtaskDescription,
      'priority': priority,
      'isCompleted': isCompleted,
    };
  }

  // Create a Subtask object from a JSON
  factory Subtask.fromJson(Map<String, dynamic> json) {
    return Subtask(
      stId: json['stId'],
      taskId: json['taskId'],
      subtaskName: json['subtaskName'],
      subtaskDescription: json['subtaskDescription'],
      priority: json['priority'],
      isCompleted: json['isCompleted'],
    );
  }
}

class ApiService_Subtask extends ApiService2<Subtask> {
  @override
  Subtask dataFromJson(Map<String, dynamic> json) {
    return Subtask.fromJson(json);
  }
}

class Contactsss {
  String userId;
  String contname;
  int phnnumber;
  String emailaddr;
  int companyId;
  String tag;
  String label;
  String bday;

  Contactsss({
    required this.userId,
    required this.contname,
    required this.phnnumber,
    required this.emailaddr,
    required this.companyId,
    required this.tag,
    required this.label,
    required this.bday,
  });

  factory Contactsss.fromJson(Map<String, dynamic> json) {
    return Contactsss(
      userId: json['userId'],
      contname: json['contname'],
      phnnumber: json['phnnumber'],
      emailaddr: json['emailaddr'],
      companyId: json['companyId'],
      tag: json['tag'],
      label: json['label'],
      bday: json['bday'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'userId': userId,
      'contname': contname,
      'phnnumber': phnnumber,
      'emailaddr': emailaddr,
      'companyId': companyId,
      'tag': tag,
      'label': label,
      'bday': bday,
    };
  }
}

class ApiService_Contact extends ApiService2<Contactsss> {
  @override
  Contactsss dataFromJson(Map<String, dynamic> json) {
    return Contactsss.fromJson(json);
  }
}

class Note {
  int? nid;
  String uid;
  String? ntitle;
  String? ncontent;
  String? nbgcolor;
  String ncreate;
  String? ncategory;
  String? nlabel;
  String ispw;
  String? pw;
  String ispinned;
  Note(
      {this.nid,
        required this.uid,
        this.ntitle,
        this.ncontent,
        this.nbgcolor,
        required this.ncreate,
        this.ncategory,
        this.nlabel,
        required this.ispw,
        this.pw,
        required this.ispinned});

  factory Note.fromJson(Map<String, dynamic> json) => Note(
      nid: json['nid'],
      uid: json['uid'],
      ntitle: json['ntitle'],
      ncontent: json['ncontent'],
      nbgcolor: json['nbgcolor'],
      ncreate: json['ncreate'],
      ncategory: json['ncategory'],
      nlabel: json['nlabel'],
      ispw: json['ispw'],
      pw: json['pw'],
      ispinned: json['ispinned']);

  Map<String, dynamic> toJson() => {
    'nid': nid,
    'uid': uid,
    'ntitle': ntitle,
    'ncontent': ncontent,
    'nbgcolor': nbgcolor,
    'ncreate': ncreate,
    'ncategory': ncategory,
    'nlabel': nlabel,
    'ispw': ispw,
    'pw': pw,
    'ispinned': ispinned,
  };
}

class Notebook {
  int? nbid;
  String uid;
  String nbname;
  String? nbcategory;
  String? nblabel;
  String? nbcolor;
  String nbcreate;
  String pw;
  String isimp;

  Notebook({
    this.nbid,
    required this.uid,
    required this.nbname,
    this.nbcategory,
    this.nblabel,
    this.nbcolor,
    required this.nbcreate,
    required this.pw,
    required this.isimp,
  });

  factory Notebook.fromJson(Map<String, dynamic> json) => Notebook(
    nbid: json['nbid'],
    uid: json['uid'],
    nbname: json['nbname'],
    nbcategory: json['nbcategory'],
    nblabel: json['nblabel'],
    nbcolor: json['nbcolor'],
    nbcreate: json['nbcreate'],
    pw: json['pw'],
    isimp: json['isimp'],
  );

  Map<String, dynamic> toJson() => {
    'nbid': nbid,
    'uid': uid,
    'nbname': nbname,
    'nbcategory': nbcategory,
    'nblabel': nblabel,
    'nbcolor': nbcolor,
    'nbcreate': nbcreate,
    'pw': pw,
    'isimp': isimp,
  };
}

class NotebookPage {
  int? npgid;
  int nbid;
  String? pgtitle;
  String? pgcontent;
  String? pgbgcolor;
  String pgcreate;

  NotebookPage({
    this.npgid,
    required this.nbid,
    this.pgtitle,
    this.pgcontent,
    this.pgbgcolor,
    required this.pgcreate,
  });

  factory NotebookPage.fromJson(Map<String, dynamic> json) => NotebookPage(
    npgid: json['npgid'],
    nbid: json['nbid'],
    pgtitle: json['pgtitle'],
    pgcontent: json['pgcontent'],
    pgbgcolor: json['pgbgcolor'],
    pgcreate: json['pgcreate'],
  );

  Map<String, dynamic> toJson() => {
    'npgid': npgid,
    'nbid': nbid,
    'pgtitle': pgtitle,
    'pgcontent': pgcontent,
    'pgbgcolor': pgbgcolor,
    'pgcreate': pgcreate,
  };
}

class PSContact {
  int? cid; // Contact ID (Auto-incremented in the database)
  String uid; // User ID
  String fname; // First name
  String? lname; // Last name
  String phnnum; // Phone number
  String? email; // Email
  String? category; // Category
  String? label; // Label

  PSContact({
    this.cid,
    required this.uid,
    required this.fname,
    this.lname,
    required this.phnnum,
    this.email,
    this.category,
    this.label,
  });

  factory PSContact.fromJson(Map<String, dynamic> map) {
    return PSContact(
      cid: map['cid'],
      uid: map['uid'],
      fname: map['fname'],
      lname: map['lname'],
      phnnum: map['phnnum'],
      email: map['email'],
      category: map['category'],
      label: map['label'],
    );
  }

  Map<String, dynamic> toJson() => {
    'cid': cid,
    'uid': uid,
    'fname': fname,
    'lname': lname,
    'phnnum': phnnum,
    'email': email,
    'category': category,
    'label': label,
  };
}
