import 'dart:typed_data';

class ToDoTask {
  final String usId;
  final int taskId;
  final String taskName;
  String taskDesc;
  final double precent;
  final String startDate;
  final String dueDate;
  String priority; //high,low,medium
  final String remind;
  final String status; //in progress, completed, on hold
  String? category;
  String? labels;
  String? subtask;
  final String createDate;

  ToDoTask({
    required this.usId,
    required this.taskId,
    required this.taskName,
    required this.taskDesc,
    required this.precent,
    required this.startDate,
    required this.dueDate,
    required this.priority,
    required this.remind,
    required this.status,
    this.category,
    this.labels,
    this.subtask,
    required this.createDate,
  });

  factory ToDoTask.fromJson(Map<String, dynamic> json) {
    return ToDoTask(
        usId: json['usId'],
        taskId: json['taskId'],
        taskName: json['taskName'],
        taskDesc: json['taskDesc'],
        precent: json['percent'].toDouble(),
        startDate: json['startDate'],
        dueDate: json['dueDate'],
        priority: json['priority'],
        remind: json['remind'],
        status: json['status'],
        category: json['category'],
        labels: json['labels'],
        subtask: json['subtask'],
        createDate: json['createDate']);
  }

  Map<String, dynamic> toJson() {
    return {
      'usId': usId,
      'taskId': taskId,
      'taskName': taskName,
      'taskDesc': taskDesc,
      'percent': precent,
      'startDate': startDate,//.toIso8601String(),
      'dueDate': dueDate,//.toIso8601String(),
      'priority': priority,
      'remind': remind,
      'status': status,
      'category': category,
      'labels': labels,
      'subtask': subtask,
      'createDate': createDate,
    };
  }
}

class Userstb {
  final int userId; // Nullable as it's generated by the database
  final String name;
  final String email;
  final String phoneNumber;
  final String password;
  final String userType;
  Uint8List? profilePicture;
  final String? uid;

  Userstb(
      {required this.userId,
      required this.name,
      required this.email,
      required this.phoneNumber,
      required this.password,
      required this.userType,
      this.profilePicture,
      required this.uid});

  factory Userstb.fromJson(Map<String, dynamic> json) {
    return Userstb(
      userId: json['userId'],
      name: json['name'],
      email: json['email'],
      phoneNumber: json['phoneNumber'],
      password: json['password'],
      userType: json['userType'],
      profilePicture: json['profilePicture'],
      uid: json['uid'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'userId': userId,
      'name': name,
      'email': email,
      'phoneNumber': phoneNumber,
      'password': password,
      'userType': userType,
      'profilePicture': profilePicture,
      'uid': uid
    };
  }
}

class Comp_Mem {
  String companyCode;
  String uid;

  Comp_Mem({
    required this.companyCode,
    required this.uid,
  });

  factory Comp_Mem.fromJson(Map<String, dynamic> json) {
    return Comp_Mem(
      companyCode: json['companyCode'],
      uid: json['uid'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'companyCode': companyCode,
      'uid': uid,
    };
  }
}

class Company {
  String userId;
  String companyCode;
  String companyName;
  String companyEmail;
  String? companyAddress;
  int companyNumber;
  String? companyWebsite;
  String? companySocialIds;
  String companyDescription;
  String industry;
  String? founder;
  int? foundingYear;
  String? services;
  Uint8List? logo; // Assuming a List of bytes for the logo

  Company({
    required this.userId,
    required this.companyCode,
    required this.companyName,
    required this.companyEmail,
    this.companyAddress,
    required this.companyNumber,
    this.companyWebsite,
    this.companySocialIds,
    required this.companyDescription,
    required this.industry,
    this.founder,
    this.foundingYear,
    this.services,
    this.logo,
  });
}

class Project {
  String userId;
  int projectId;
  String projectHead;
  String name;
  String description;
  DateTime creationDate;
  DateTime dueDate;
  String priority;
  String status;
  double progress;
  List tags;

  Project({
    required this.userId,
    required this.projectId,
    required this.projectHead,
    required this.name,
    required this.description,
    required this.creationDate,
    required this.dueDate,
    required this.priority,
    required this.status,
    required this.progress,
    required this.tags,
  });

  factory Project.fromJson(Map<String, dynamic> json) {
    return Project(
      userId: json['userId'],
      projectId: json['projectId'],
      projectHead: json['projectHead'],
      name: json['name'],
      description: json['description'],
      creationDate: DateTime.parse(json['creationDate']),
      dueDate: DateTime.parse(json['dueDate']),
      priority: json['priority'],
      status: json['status'],
      progress: json['progress'],
      tags: json['tags'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'userId': userId,
      'projectId': projectId,
      'projectHead': projectHead,
      'name': name,
      'description': description,
      'creationDate': creationDate.toIso8601String(),
      'dueDate': dueDate.toIso8601String(),
      'priority': priority,
      'status': status,
      'progress': progress,
      'tags': tags,
    };
  }
}

class ProjMem {
  int projectId;
  String uid;

  ProjMem({
    required this.projectId,
    required this.uid,
  });

  factory ProjMem.fromJson(Map<String, dynamic> json) {
    return ProjMem(
      projectId: json['projectId'],
      uid: json['uid'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'projectId': projectId,
      'uid': uid,
    };
  }
}

class Reminder {
  String remId;
  String userId;
  String description;
  DateTime eventDate;
  bool doRemind;
  DateTime? remindTime;

  Reminder({
    required this.remId,
    required this.userId,
    required this.description,
    required this.eventDate,
    required this.doRemind,
    this.remindTime,
  });

  factory Reminder.fromJson(Map<String, dynamic> json) {
    return Reminder(
      remId: json['remId'],
      userId: json['userId'],
      description: json['description'],
      eventDate: DateTime.parse(json['eventDate']),
      doRemind: json['doRemind'],
      remindTime: json['remindTime'],
    );
  }

  Map<String, dynamic> toJson() {
    return {
      'remId': remId,
      'userId': userId,
      'description': description,
      'eventDate': eventDate.toIso8601String(),
      'doRemind': doRemind,
      'remindTime': remindTime,
    };
  }
}

class Subtask {
  final int taskId; // Reference to ToDoTasks taskId
  final String subtaskName;
  final String subtaskDescription;
  final String isCompleted;

  Subtask({
    required this.taskId,
    required this.subtaskName,
    required this.subtaskDescription,
    required this.isCompleted,
  });

  Map<String, dynamic> toJson() {
    return {
      'taskId': taskId,
      'subtaskName': subtaskName,
      'subtaskDescription': subtaskDescription,
      'isCompleted': isCompleted,
    };
  }

  // Create a Subtask object from a JSON
  factory Subtask.fromJson(Map<String, dynamic> json) {
    return Subtask(
      taskId: json['taskId'],
      subtaskName: json['subtaskName'],
      subtaskDescription: json['subtaskDescription'],
      isCompleted: json['isCompleted'],
    );
  }
}
